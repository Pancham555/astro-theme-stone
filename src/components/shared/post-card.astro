---
// components/BlogCard.astro
import { Icon } from "astro-icon/components";

interface Props {
  post: any;
}

const { post } = Astro.props;
const postDate = post.data.date
  ? new Date(post.data.date).toLocaleDateString()
  : null;
---

<div class="flex flex-col items-stretch group">
  <!-- Card Link / Image -->
  <a
    href={`/posts/${post.slug}/`}
    class="relative overflow-hidden rounded-3xl flex items-center justify-center"
  >
    <!-- Hover Play Button -->
    <div
      class="play-button text-white absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 z-10"
    >
      <div class="bg-white/[0.75] text-black w-full h-full flex items-center justify-center rounded-full backdrop-blur-[5px]">
        <Icon
          name="iconamoon:arrow-top-right-1-thin"
          class="w-12 h-12"
        />
      </div>
    </div>

    <!-- Post Image -->
    {post.data.image ? (
      <img
        src={post.data.image}
        alt={`Cover for ${post.data.title}`}
        class="w-full h-80 sm:h-96 object-cover rounded-3xl transition-transform duration-500 group-hover:scale-105"
        loading="lazy"
      />
    ) : (
      <div class="bg-neutral-200 dark:bg-neutral-800 w-full h-80 sm:h-96 flex items-center justify-center text-neutral-500">
        No Image
      </div>
    )}
  </a>

  <!-- Text Info -->
  <div class="mt-5 flex flex-col gap-2">
    <a
      href={`/posts/${post.slug}/`}
      class="menu-item relative flex flex-col items-start"
    >
      <h3 class="text-2xl font-medium leading-8">{post.data.title}</h3>
      <div class="w-full h-0.5 mt-1"></div>
    </a>

    {postDate && (
      <p class="text-neutral-400 text-sm">{postDate}</p>
    )}

    {post.data.description && (
      <p class="text-neutral-600 dark:text-neutral-300 text-base line-clamp-3">
        {post.data.description}
      </p>
    )}
  </div>
</div>
 <style is:global>
    /* Hover underline for title */
    a.menu-item {
      position: relative;
      color: #000; /* default light mode text color */
    }
    a.menu-item::before {
      content: "";
      position: absolute;
      width: 100%;
      height: 2px;
      bottom: 0;
      transform-origin: right;
      transform: scaleX(0);
      transition: transform 0.3s ease-in-out, background-color 0.3s ease-in-out;
      background-color: currentColor; /* inherits text color */
    }
    .dark a.menu-item {
      color: #fff; /* dark mode text color */
    }
    a.menu-item:hover::before {
      transform: scaleX(1);
      transform-origin: left;
    }

 .play-button {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
      transition: opacity 0.3s ease-in-out;
      z-index: 10;
    }

    .group:hover .play-button {
      opacity: 1;
    }

    .play-button > div {
      width: 7rem;
      height: 7rem;
      border-radius: 9999px;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: rgba(255, 255, 255, 0.75);
      color: #000;
      backdrop-blur: 5px;
      transition: transform 0.3s ease-in-out;
      transform: scale(0.5);
    }

    .group:hover .play-button > div {
      transform: scale(1);
    }
  </style>